{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, Validators } from \"@angular/forms\";\nlet ListParentComponent = class ListParentComponent {\n  constructor(httpService, http, fb, route) {\n    this.httpService = httpService;\n    this.http = http;\n    this.fb = fb;\n    this.route = route;\n    this.parents = [];\n  }\n  ngOnInit() {\n    this.getParents();\n    this.initAddParent();\n  }\n  getParentById(data) {\n    this.httpService.authGet(\"parent/\" + data).subscribe({\n      next: res => {\n        this.parent = res.body;\n        console.log(this.parent);\n      }\n    });\n  }\n  delete(id) {\n    this.parents = this.parents.filter(f => f.id !== id);\n    this.httpService.authDelete(\"parent/\" + id).subscribe({\n      next: data => {}\n    });\n  }\n  getParents() {\n    this.httpService.authGet(\"parent\").subscribe({\n      next: data => {\n        this.parents = data.body;\n        console.log(this.parents);\n      },\n      error: error => console.log(error)\n    });\n  }\n  initAddParent() {\n    this.parentFormGroup = this.fb.group({\n      nomParent: new FormControl('', [Validators.required]),\n      prenomParent: new FormControl('', [Validators.required]),\n      cne: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.required),\n      motDePasse: new FormControl('', Validators.required),\n      tel: new FormControl('', Validators.required)\n    });\n  }\n  save() {\n    this.http.post(\"parent\", this.parentFormGroup.value).subscribe(response => {\n      this.route.navigate([\"/get-parent\"]);\n      console.log(\"done ==> \", response);\n      this.getParents();\n    }, err => {\n      console.log(err);\n    });\n  }\n};\nListParentComponent = __decorate([Component({\n  selector: 'app-list-parents',\n  templateUrl: './list-parents.component.html',\n  styleUrls: ['./list-parent.component.css']\n})], ListParentComponent);\nexport { ListParentComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAqBC,WAAW,EAAaC,UAAU,QAAO,gBAAgB;AASvE,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAI9BC,YAAoBC,WAAyB,EACzBC,IAAiB,EACjBC,EAAgB,EAChBC,KAAY;IAHZ,gBAAW,GAAXH,WAAW;IACX,SAAI,GAAJC,IAAI;IACJ,OAAE,GAAFC,EAAE;IACF,UAAK,GAALC,KAAK;IALzB,YAAO,GAAiB,EAAE;EAQ1B;EAEAC,QAAQ;IACJ,IAAI,CAACC,UAAU,EAAE;IACjB,IAAI,CAACC,aAAa,EAAE;EACxB;EAEAC,aAAa,CAACC,IAAU;IACtB,IAAI,CAACR,WAAW,CAACS,OAAO,CAAC,SAAS,GAACD,IAAI,CAAC,CAACE,SAAS,CAAC;MACjDC,IAAI,EAAIC,GAAQ,IAAG;QACjB,IAAI,CAACC,MAAM,GAACD,GAAG,CAACE,IAAI;QACpBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,MAAM,CAAC;MAC1B;KACD,CAAC;EACJ;EAEAI,MAAM,CAACC,EAAQ;IACb,IAAI,CAACC,OAAO,GAAC,IAAI,CAACA,OAAO,CAACC,MAAM,CAAEC,CAAC,IAAIA,CAAC,CAACH,EAAE,KAAKA,EAAE,CAAC;IACnD,IAAI,CAAClB,WAAW,CAACsB,UAAU,CAAC,SAAS,GAACJ,EAAE,CAAC,CAACR,SAAS,CAAC;MAClDC,IAAI,EAAIH,IAAU,IAAG,CACrB;KACD,CAAC;EACJ;EAGAH,UAAU;IACR,IAAI,CAACL,WAAW,CAACS,OAAO,CAAC,QAAQ,CAAC,CAC/BC,SAAS,CAAC;MACTC,IAAI,EAAGH,IAAS,IAAI;QAEjB,IAAI,CAACW,OAAO,GAAEX,IAAI,CAACM,IAAI;QACvBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACG,OAAO,CAAC;MAC5B,CAAC;MACDI,KAAK,EAAEA,KAAK,IAAIR,OAAO,CAACC,GAAG,CAACO,KAAK;KAClC,CAAC;EAGN;EAIAjB,aAAa;IAEX,IAAI,CAACkB,eAAe,GAAC,IAAI,CAACtB,EAAE,CAACuB,KAAK,CAAC;MACjCC,SAAS,EAAG,IAAI9B,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAAC8B,QAAQ,CAAE,CAAE;MACxDC,YAAY,EAAG,IAAIhC,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAAC8B,QAAQ,CAAC,CAAE;MAC1DE,GAAG,EAAG,IAAIjC,WAAW,CAAC,EAAE,EAACC,UAAU,CAAC8B,QAAQ,CAAE;MAC9CG,KAAK,EAAG,IAAIlC,WAAW,CAAC,EAAE,EAACC,UAAU,CAAC8B,QAAQ,CAAE;MAChDI,UAAU,EAAG,IAAInC,WAAW,CAAC,EAAE,EAACC,UAAU,CAAC8B,QAAQ,CAAE;MACrDK,GAAG,EAAG,IAAIpC,WAAW,CAAC,EAAE,EAACC,UAAU,CAAC8B,QAAQ;KAE7C,CAAC;EACJ;EACAM,IAAI;IACF,IAAI,CAAChC,IAAI,CAACiC,IAAI,CAAC,QAAQ,EAAC,IAAI,CAACV,eAAe,CAACW,KAAK,CAAC,CAACzB,SAAS,CAC1D0B,QAAY,IAAG;MACd,IAAI,CAACjC,KAAK,CAACkC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;MACpCtB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEoB,QAAQ,CAAC;MAClC,IAAI,CAAC/B,UAAU,EAAE;IACnB,CAAC,EAAIiC,GAAS,IAAI;MAChBvB,OAAO,CAACC,GAAG,CAACsB,GAAG,CAAC;IAElB,CAAC,CACF;EACH;CACD;AA3EYxC,mBAAmB,eAL/BH,SAAS,CAAC;EACT4C,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,GACW3C,mBAAmB,CA2E/B;SA3EYA,mBAAmB","names":["Component","FormControl","Validators","ListParentComponent","constructor","httpService","http","fb","route","ngOnInit","getParents","initAddParent","getParentById","data","authGet","subscribe","next","res","parent","body","console","log","delete","id","parents","filter","f","authDelete","error","parentFormGroup","group","nomParent","required","prenomParent","cne","email","motDePasse","tel","save","post","value","response","navigate","err","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Chifae\\IdeaProjects\\GestionGarderieFront\\src\\app\\components\\parents\\list-parent\\list-parent.component.ts"],"sourcesContent":["import { HttpService } from './../../../services/http.service';\r\nimport { Component } from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Router} from \"@angular/router\";\r\nimport {ParentModel} from \"../../../models/Parent.model\";\r\n\r\n@Component({\r\n  selector: 'app-list-parents',\r\n  templateUrl: './list-parents.component.html',\r\n  styleUrls: ['./list-parent.component.css']\r\n})\r\nexport class ListParentComponent {\r\n  parentFormGroup !: FormGroup;\r\n  parents : ParentModel[]=[];\r\n  parent : any;\r\n  constructor(private httpService : HttpService ,\r\n              private http :HttpService ,\r\n              private fb : FormBuilder,\r\n              private route:Router\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n      this.getParents();\r\n      this.initAddParent();\r\n  }\r\n\r\n  getParentById(data : any){\r\n    this.httpService.authGet(\"parent/\"+data).subscribe({\r\n      next : (res: any)=>{\r\n        this.parent=res.body;\r\n        console.log(this.parent);\r\n      }\r\n    })\r\n  }\r\n\r\n  delete(id : any){\r\n    this.parents=this.parents.filter((f)=> f.id !== id)\r\n    this.httpService.authDelete(\"parent/\"+id).subscribe({\r\n      next : (data : any)=>{\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  getParents(){\r\n    this.httpService.authGet(\"parent\")\r\n      .subscribe({\r\n        next: (data: any) => {\r\n\r\n           this.parents= data.body;\r\n           console.log(this.parents)\r\n        },\r\n        error: error => console.log(error)\r\n      });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  initAddParent()\r\n  {\r\n    this.parentFormGroup=this.fb.group({\r\n      nomParent : new FormControl('', [Validators.required ] ),\r\n      prenomParent : new FormControl('', [Validators.required] ),\r\n      cne : new FormControl('',Validators.required ),\r\n      email : new FormControl('',Validators.required ),\r\n      motDePasse : new FormControl('',Validators.required ),\r\n      tel : new FormControl('',Validators.required ),\r\n\r\n    });\r\n  }\r\n  save(){\r\n    this.http.post(\"parent\",this.parentFormGroup.value).subscribe(\r\n      (response:any)=>{\r\n        this.route.navigate([\"/get-parent\"])\r\n        console.log(\"done ==> \", response)\r\n        this.getParents();\r\n      } , (err : any )=>  {\r\n        console.log(err);\r\n\r\n      }\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}